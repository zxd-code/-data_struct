BWT example:

S = banana; Len(S) = 6
    012345

sorted M':

i id*           id^
0  5 ['abanan',  4
1  3  'anaban',  2
2  1  'ananab',  0
3  0  'banana',  5
4  4  'nabana',  3
5  2  'nanaba']  1

--
id*: id of the first char of every row in S
id^: id of the last char of every row in S

id^ = (id* - 1) % Len

Result = (R, I)
  where 
    R = {S[i] | i `in` id^}
    I = index of 0 in id*)

For this example it is:
  (nnbaaa, 3)



Inverse:

R = nnbaaa, I=3

Let X = zip(R, [1,2,3...]):

id Char
0   n
1   n
2   b
3   a
4   a
5   a

sort X on Char:

  id' Char'
0  3   a
1  4   a
2  5   a
3  2   b
4  0   n
5  1   n

Define T = id'

i = I
loop Len times:
  i = T[i]
  S = S + R[i]
 
i =>3->2->5->1->4->0->3

S = R[2], R[5], R[1], R[4], R[0], R[3] = "banana"