#
# $Id: //stdlib/dev/etc/stdlib/config/acc.config#5 $
#
# configuration file for HP aCC on HP-UX
#
##############################################################################

CXX       = aCC

CCVER     = $(shell $(CXX) -V 2>&1 | awk '{ print $$6 }')
aCC_MAJOR = $(shell echo $(CCVER) | sed "s/[^.]*\.\([0-9]*\)\..*/\1/")
aCC_MINOR = $(shell echo $(CCVER) | sed "s/[^.]*\.[^.]*\.\([0-9]*\)/\1/")

WARNFLAGS = +w +W392 +W655 +W684 +W818 +W819 +W849

ifeq ($(shell [ $(aCC_MAJOR) -eq 3 -a $(aCC_MINOR) -lt 33 ] && echo 1),1)

# disable bogus aCC warnings (aCC prior to 3.32):
#    229 Ambiguous overloaded function call
#    361 Value-returning function might end without executing a return statement

WARNFLAGS  += +W229 +W361
endif

ifeq ($(aCC_MAJOR),06)

# disable aCC 6.x (EDG front end) warnings emitted with +w:
WARNFLAGS  += +W2193 +W2236 +W2261 +W2340 +W2401 +W2487

# 2193 zero used for undefined preprocessing identifier
# 2236 controlling expression is constant
# 2261 access control not specified (%sq by default)
# 2340 value copied to temporary, reference to temporary used
# 2401 destructor for base class %t is not virtual
# 2487 inline %n cannot be explicitly instantiated

endif   # aCC 6.x

ifeq ($(shell [ $(aCC_MAJOR) -ge 6 -o $(aCC_MINOR) -ge 38 ] && echo 1),1)
# starting with aCC x.38, the +Md option is deprecated in favor of +Maked
DEPENDFLAGS     = +Maked -E
else
DEPENDFLAGS     = +Md -E
endif

PICFLAGS        = +Z
LDSOFLAGS       = +Z -b

# $(_CPPOPTS), $(_CXXOPTS), and $(_LDOPTS) provided to allow for modification
# of the respective variables w/o underscores on HP-UX where the latter are
# used directly by the compiler and linker, respectively

ifeq ($(shell [ $(aCC_MAJOR) -ge 5 ] && echo 1),1)
#  use -AA with aCC 5 and 6
CXXFLAGS        = -AA "$$"(_CXXOPTS)
CXXPRELINK      = 
CPPFLAGS        = "$$"(_CPPOPTS)
LDFLAGS         = -AA +nostl -Wl,+s -L$(LIBDIR) "$$"(_LDOPTS)
else
CXXFLAGS        = -Aa +nostl "$$"(_CXXOPTS)
CXXPRELINK      = 
CPPFLAGS        = -I$(TOPDIR)/include/ansi -I/usr/include "$$"(_CPPOPTS)
# -Wl,+s allows the dynamic loader to consider LD_LIBRARY_PATH (LP64)
# and SHLIB_PATH when loading an executable into memory
LDFLAGS         = -Aa +nostl -Wl,+s -Wl,+vnocompatwarnings -L$(LIBDIR) "$$"(_LDOPTS)
endif


# debug/optimization options
DEBUG_CXXFLAGS  = -g +d
DEBUG_CPPFLAGS  =

OPTMZ_CXXFLAGS  = +O2
OPTMZ_CPPFLAGS  =

# shared/static library options
SHARED_CXXFLAGS =
SHARED_CPPFLAGS =
SHARED_LDFLAGS  =
SHARED_SUFFIX   = .sl

STATIC_CXXFLAGS =
STATIC_CPPFLAGS =
STATIC_LDFLAGS  =

# multi/single thread options; 
# we use the macros defined by the compiler when the -mt option is used
# DCE threads not added since HP-UX versions after 10.20 use POSIX
MULTI_CPPFLAGS_POSIX   = -mt
MULTI_CPPFLAGS_SOLARIS = 
MULTI_CPPFLAGS_DCE     = 

MULTI_LDFLAGS_POSIX    = -mt
MULTI_LDFLAGS_SOLARIS  = 
MULTI_LDFLAGS_DCE      = 

# POSIX
MULTI_CPPFLAGS = $(MULTI_CPPFLAGS_POSIX)
MULTI_LDFLAGS  = $(MULTI_LDFLAGS_POSIX)

SINGL_CPPFLAGS =
SINGL_LDFLAGS  =

# wide (64-bit, LP64) flags
WIDE_CXXFLAGS  = +DD64
WIDE_LDFLAGS   = +DD64
WIDE_LDSOFLAGS = +DD64
WIDE_ARFLAGS   =
