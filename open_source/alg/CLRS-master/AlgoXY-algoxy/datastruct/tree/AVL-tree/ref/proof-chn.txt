Hi,

今天想证明AVL tree的高度和节点数的关系
1. WIKI给出的结论是： h is strictly less than log_{\phi}(n+2)-1. 其中\phi是黄金分割率(\sqrt(5)+1)/2
2. The functional approach to programing给出的是h is bound to 1.44 log_2(n+2)
3. 某大学的open course lecture给出的结论是h < 1.44 log n

CLRS上 problem 13.3 要求读者证明height是O(lg N)

到底哪个是正确的？首先无论1， 2， 3都是O(lg N).

我们试着证明下：

denote N(h) 为高度为h的AVL树的最少节点个数；我们很容易得出平凡情况：
N(0) = 0 (空树)
N(1) = 1 (一个根节点)

现在考虑一般情况，一个高度为h的数，它分为3个部分：根节点，子树A，和子树B；这里A可以是左子树，也可以是右子树。
不妨设A的高度为h-1，然后考虑B的高度，根据AVL数的定义|height(A) - height(B)| <= 1；
所以B的高度height(B)>=h-2。
于是我们有

N(h) = 1 + N(h-1) + N(h-2)

也就是说，高度为H的AVL树的最小节点个数，为1个根节点，加上高度为h-1的AVL数最小节点个数和高度为h-2的AVL树的最小节点个数。

这个公式看起来眼熟，似乎有点想Fibonacci数列。如果我们定义N'(h) = N(h) + 1则这个公式就变化为：

N'(h) = N'(h-1) + N'(h-2)

这就是Fibonacci数列了。 

我们可以直接利用Fibonacci数列的性质，也可以自己证明一把： N'(h) >= \phi^h

使用数学归纳法： 
  h = 0 的时候， N'(0) = 1 >= \phi^0
  h = 1 的时候， N'(1) = 2 > \phi^1 = (\sqrt(5)+1)/2 = 1.618

假设N'(h) >= \phi^h
有 N'(h+1) = N'(h) + N'(h-1) >= \phi^h + \phi^{h-1}
           = \phi^{h-1}*(\phi+1)
注意到\phi+1 = (\sqrt(5)+3)/2 = \phi^2
故 N'(h+1) >= \phi^{h-1}*\phi^2 = \phi^{h+1}
证明完毕。

于是有N'(h) = N(h)+1 >= \phi^h
故 h <= log_{\phi}(N(h)+1) 而N(h)<=N，所以有

  h <= log_{\phi}(N+1)

这个结论似乎和1, 2, 3都不一样，事实上。我们可以证明1。

我们前面证明了N'(h)>=\phi^h, 事实上，还可以证明N'(h)>\phi^{h+1}-1
仍然用数学归纳法：
  N'(0)=1 > \phi^1-1=0.618
  N'(1)=2 > \phi^2-1=1.618
  N'(h+1) = N'(h)+N'(h-1) > \phi^{h+1}-\phi^{h} = \phi^h(1-\phi) = \phi^{h+2} > \phi^{h+2} - 1
证明完毕

  所以直接可以得到 h < log_{\phi}(n+2)-1

所以1得证，由于这里是严格小于，考虑h是整数，故 h <= log_{\phi}(n+2) = log_{2}(n+2)/log_{2}(\phi) = 1.44 log_{2}(n+2)
所以2得证。

事实上，还可以证明N(h) > \phi^h。方法也是数学归纳法。这里不赘述了。
于是有 h < log_{\phi}(N) = 1.44 log_{2}(N)
这就证明了3。

--
LIU
https://github.com/liuxinyu95/AlgoXY