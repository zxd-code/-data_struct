/*
1.网络通信模型
2.avl和红黑树区别
    AVL树是二叉树,其左右子树的高度差不超过1
    对于关联容器来说，不需要内存拷贝和移动，map和set都是以结点的方式来存储的，其结构和链表差不多
    AVL靠平衡因子和旋转，红黑树靠节点颜色以及一些约定再加上旋转
    AVL树是带有平衡条件的二叉查找树，它是严格的平衡二叉树,平衡条件必须满足(所有节点的左右子树高度差不超过1).不管我们是执行插入还是删除操作,
    只要不满足上面的条件,就要通过旋转来保持平衡,而旋转是非常耗时的,由此我们可以知道AVL树适合用于插入删除次数比较少，但查找多的情况

    相对于要求严格的AVL树来说,它的旋转次数变少,所以对于搜索,插入,删除操作多的情况下,我们就用红黑
    IO多路复用epoll的实现采用红黑树组织管理sockfd，以支持快速的增删改查

    红黑树最短路径:N-1 最长路径2*(N-1)

    红黑树和AVL树的区别:
        1.红黑树不追求完全平衡,只要求部分平衡,降低了对旋转的要求,从而提高性能,旋转最多三次
        2.AVL要求结点孩子高度差小于1,所以是高度平衡二叉树,插入删除元素需要1到多次的旋转
        3.红黑树没有AVL树绝对平衡,所以查找的性能AVL>红黑树;但是插入和删除红黑树>AVL
3.抓包工具
4.socket
5.select和epoll区别
6.maoolc和new区别
7.gdb调试
8.多线程调试切换
9.端口监听命令
10.拥塞控制算法
*/

红黑树:
1.红黑树的每个结点要么是红色,要么是黑色
2.根节点必须是黑色的
3.叶子结点(为NULL的结点)也必须是黑色的
4.没一个红色结点的子节点必须是黑色,不能有两个连续的红色结点
5.对于每一个结点,从该节点到其所有孩子结点的路径上黑色结点的数目必须相同

